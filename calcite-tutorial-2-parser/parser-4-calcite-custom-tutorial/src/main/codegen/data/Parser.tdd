{
  package: "com.github.linyanshi.calcite.parser.tutorial",
  class: "CustomSqlParserImpl",

  imports: [
    "com.github.linyanshi.calcite.parser.tutorial.sample.statement.model.*"
    "com.github.linyanshi.calcite.parser.tutorial.sample.type.model.*"
    "com.github.linyanshi.calcite.parser.tutorial.SqlShowDatabases"
    "com.github.linyanshi.calcite.parser.tutorial.SqlCreateFunction"
    "com.github.linyanshi.calcite.parser.tutorial.SqlProperty"
    "org.apache.calcite.sql.SqlAlienSystemTypeNameSpec"
    "org.apache.calcite.sql.SqlCreate"
    "org.apache.calcite.sql.SqlDrop"
    "java.util.List"
    "java.util.ArrayList"
  ]

  keywords: [
    "DATABASES"
    "COMMENT"
    "IF"
    "METADATA"
    "OVERWRITE"
    "PROPERTY"
    "PARAMS"
    "LITERAL_SAMPLE"
    "UNSIGNED_NUMERIC_LITERAL_SAMPLE"
    "NUMERIC_LITERAL_SAMPLE"
    "STRING_LITERAL_SAMPLE"
    "DATE_TIME_LITERAL_SAMPLE"
    "INTERVAL_LITERAL_SAMPLE"
    "INTERVAL_QUALIFIER_SAMPLE"
    "IDENTIFIER_SAMPLE"
    "SIMPLE_IDENTIFIER_SAMPLE"
    "SIMPLE_IDENTIFIER_COMMA_LIST_SAMPLE"
    "COMPOUND_IDENTIFIER_SAMPLE"
    "COMPOUND_IDENTIFIER_TYPE_COMMA_LIST_SAMPLE"
  ]

  nonReservedKeywords: [
         "A"
         "ABSENT"
         "ABSOLUTE"
         "ACTION"
         "ADA"
         "ADD"
         "ADMIN"
         "AFTER"
         "ALWAYS"
         "APPLY"
         "ASC"
         "ASSERTION"
         "ASSIGNMENT"
         "ATTRIBUTE"
         "ATTRIBUTES"
         "BEFORE"
         "BERNOULLI"
         "BREADTH"
         "C"
         "CASCADE"
         "CATALOG"
         "CATALOG_NAME"
         "CENTURY"
         "CHAIN"
         "CHARACTER_SET_CATALOG"
         "CHARACTER_SET_NAME"
         "CHARACTER_SET_SCHEMA"
         "CHARACTERISTICS"
         "CHARACTERS"
         "CLASS_ORIGIN"
         "COBOL"
         "COLLATION"
         "COLLATION_CATALOG"
         "COLLATION_NAME"
         "COLLATION_SCHEMA"
         "COLUMN_NAME"
         "COMMAND_FUNCTION"
         "COMMAND_FUNCTION_CODE"
         "COMMITTED"
         "CONDITION_NUMBER"
         "CONDITIONAL"
         "CONNECTION"
         "CONNECTION_NAME"
         "CONSTRAINT_CATALOG"
         "CONSTRAINT_NAME"
         "CONSTRAINT_SCHEMA"
         "CONSTRAINTS"
         "CONSTRUCTOR"
         "CONTINUE"
         "CURSOR_NAME"
         "DATA"
         "DATABASE"
         "DATETIME_INTERVAL_CODE"
         "DATETIME_INTERVAL_PRECISION"
         "DECADE"
         "DEFAULTS"
         "DEFERRABLE"
         "DEFERRED"
         "DEFINED"
         "DEFINER"
         "DEGREE"
         "DEPTH"
         "DERIVED"
         "DESC"
         "DESCRIPTION"
         "DESCRIPTOR"
         "DIAGNOSTICS"
         "DISPATCH"
         "DOMAIN"
         "DOW"
         "DOY"
         "DYNAMIC_FUNCTION"
         "DYNAMIC_FUNCTION_CODE"
         "ENCODING"
         "EPOCH"
         "ERROR"
         "EXCEPTION"
         "EXCLUDE"
         "EXCLUDING"
         "FINAL"
         "FIRST"
         "FOLLOWING"
         "FORMAT"
         "FORTRAN"
         "FOUND"
         "FRAC_SECOND"
         "G"
         "GENERAL"
         "GENERATED"
         "GEOMETRY"
         "GO"
         "GOTO"
         "GRANTED"
         "HIERARCHY"
         "IMMEDIATE"
         "IMMEDIATELY"
         "IMPLEMENTATION"
         "INCLUDING"
         "INCREMENT"
         "INITIALLY"
         "INPUT"
         "INSTANCE"
         "INSTANTIABLE"
         "INVOKER"
         "ISODOW"
         "ISOYEAR"
         "ISOLATION"
         "JAVA"
         "JSON"
         "K"
         "KEY"
         "KEY_MEMBER"
         "KEY_TYPE"
         "LABEL"
         "LAST"
         "LENGTH"
         "LEVEL"
         "LIBRARY"
         "LOCATOR"
         "M"
         "MAP"
         "MATCHED"
         "MAXVALUE"
         "MICROSECOND"
         "MESSAGE_LENGTH"
         "MESSAGE_OCTET_LENGTH"
         "MESSAGE_TEXT"
         "MILLISECOND"
         "MILLENNIUM"
         "MINVALUE"
         "MORE_"
         "MUMPS"
         "NAME"
         "NAMES"
         "NANOSECOND"
         "NESTING"
         "NORMALIZED"
         "NULLABLE"
         "NULLS"
         "NUMBER"
         "OBJECT"
         "OCTETS"
         "OPTION"
         "OPTIONS"
         "ORDERING"
         "ORDINALITY"
         "OTHERS"
         "OUTPUT"
         "OVERRIDING"
         "PAD"
         "PARAMETER_MODE"
         "PARAMETER_NAME"
         "PARAMETER_ORDINAL_POSITION"
         "PARAMETER_SPECIFIC_CATALOG"
         "PARAMETER_SPECIFIC_NAME"
         "PARAMETER_SPECIFIC_SCHEMA"
         "PARTIAL"
         "PASCAL"
         "PASSING"
         "PASSTHROUGH"
         "PAST"
         "PATH"
         "PLACING"
         "PLAN"
         "PLI"
         "PRECEDING"
         "PRESERVE"
         "PRIOR"
         "PRIVILEGES"
         "PUBLIC"
         "QUARTER"
         "READ"
         "RELATIVE"
         "REPEATABLE"
         "REPLACE"
         "RESTART"
         "RESTRICT"
         "RETURNED_CARDINALITY"
         "RETURNED_LENGTH"
         "RETURNED_OCTET_LENGTH"
         "RETURNED_SQLSTATE"
         "RETURNING"
         "ROLE"
         "ROUTINE"
         "ROUTINE_CATALOG"
         "ROUTINE_NAME"
         "ROUTINE_SCHEMA"
         "ROW_COUNT"
         "SCALAR"
         "SCALE"
         "SCHEMA"
         "SCHEMA_NAME"
         "SCOPE_CATALOGS"
         "SCOPE_NAME"
         "SCOPE_SCHEMA"
         "SECTION"
         "SECURITY"
         "SELF"
         "SEQUENCE"
         "SERIALIZABLE"
         "SERVER"
         "SERVER_NAME"
         "SESSION"
         "SETS"
         "SIMPLE"
         "SIZE"
         "SOURCE"
         "SPACE"
         "SPECIFIC_NAME"
         "SQL_BIGINT"
         "SQL_BINARY"
         "SQL_BIT"
         "SQL_BLOB"
         "SQL_BOOLEAN"
         "SQL_CHAR"
         "SQL_CLOB"
         "SQL_DATE"
         "SQL_DECIMAL"
         "SQL_DOUBLE"
         "SQL_FLOAT"
         "SQL_INTEGER"
         "SQL_INTERVAL_DAY"
         "SQL_INTERVAL_DAY_TO_HOUR"
         "SQL_INTERVAL_DAY_TO_MINUTE"
         "SQL_INTERVAL_DAY_TO_SECOND"
         "SQL_INTERVAL_HOUR"
         "SQL_INTERVAL_HOUR_TO_MINUTE"
         "SQL_INTERVAL_HOUR_TO_SECOND"
         "SQL_INTERVAL_MINUTE"
         "SQL_INTERVAL_MINUTE_TO_SECOND"
         "SQL_INTERVAL_MONTH"
         "SQL_INTERVAL_SECOND"
         "SQL_INTERVAL_YEAR"
         "SQL_INTERVAL_YEAR_TO_MONTH"
         "SQL_LONGVARBINARY"
         "SQL_LONGVARNCHAR"
         "SQL_LONGVARCHAR"
         "SQL_NCHAR"
         "SQL_NCLOB"
         "SQL_NUMERIC"
         "SQL_NVARCHAR"
         "SQL_REAL"
         "SQL_SMALLINT"
         "SQL_TIME"
         "SQL_TIMESTAMP"
         "SQL_TINYINT"
         "SQL_TSI_DAY"
         "SQL_TSI_FRAC_SECOND"
         "SQL_TSI_HOUR"
         "SQL_TSI_MICROSECOND"
         "SQL_TSI_MINUTE"
         "SQL_TSI_MONTH"
         "SQL_TSI_QUARTER"
         "SQL_TSI_SECOND"
         "SQL_TSI_WEEK"
         "SQL_TSI_YEAR"
         "SQL_VARBINARY"
         "SQL_VARCHAR"
         "STATE"
         "STATEMENT"
         "STRUCTURE"
         "STYLE"
         "SUBCLASS_ORIGIN"
         "SUBSTITUTE"
         "TABLE_NAME"
         "TEMPORARY"
         "TIES"
         "TIMESTAMPADD"
         "TIMESTAMPDIFF"
         "TOP_LEVEL_COUNT"
         "TRANSACTION"
         "TRANSACTIONS_ACTIVE"
         "TRANSACTIONS_COMMITTED"
         "TRANSACTIONS_ROLLED_BACK"
         "TRANSFORM"
         "TRANSFORMS"
         "TRIGGER_CATALOG"
         "TRIGGER_NAME"
         "TRIGGER_SCHEMA"
         "TYPE"
         "UNBOUNDED"
         "UNCOMMITTED"
         "UNCONDITIONAL"
         "UNDER"
         "UNNAMED"
         "USAGE"
         "USER_DEFINED_TYPE_CATALOG"
         "USER_DEFINED_TYPE_CODE"
         "USER_DEFINED_TYPE_NAME"
         "USER_DEFINED_TYPE_SCHEMA"
         "UTF8"
         "UTF16"
         "UTF32"
         "VERSION"
         "VIEW"
         "WEEK"
         "WRAPPER"
         "WORK"
         "WRITE"
         "XML"
         "ZONE"
  ]

  # keywordsToAdd中存在的key要现在keywords中定义
  nonReservedKeywordsToAdd: [
    "IF"
    "METADATA"
    "OVERWRITE"
  ]

  nonReservedKeywordsToRemove: [
  ]

  statementParserMethods: [
    "SqlShowDatabases()"
    "SqlCreateFunction()"
    "LiteralSample()"
    "UnsignedNumericLiteralSample()"
    "NumericLiteralSample()"
    "StringLiteralSample()"
    "DateTimeLiteralSample()"
    "IntervalLiteralSample()"
    "IntervalQualifierSample()"
    "IdentifierSample()"
    "SimpleIdentifierSample()"
    "SimpleIdentifierCommaListSample()"
    "ParenthesizedSimpleIdentifierListSample()"
    "CompoundIdentifierSample()"
    "CompoundIdentifierTypeCommaListSample()"
  ]

  # 解析自定义文本的方法列表
  literalParserMethods: [
  ]

# 用于解析自定义数据类型的方法列表。
  dataTypeParserMethods: [
     # "SqlArrayType()"
  ]

  builtinFunctionCallMethods: [
  ]

  alterStatementParserMethods: [
  ]

  createStatementParserMethods: [
  ]

  dropStatementParserMethods: [
  ]

  binaryOperatorsTokens: [
  ]

  extraBinaryExpressions: [
  ]

  implementationFiles: [
    "parserImplsStatementSample.ftl",
    "parserImplsTypeSample.ftl",
    "compoundIdentifier.ftl",
    "parserImpls.ftl"
  ]

  joinTypes: [
  ]

  includePosixOperators: false
  includeCompoundIdentifier: true
  includeBraces: true
  includeAdditionalDeclarations: false
}
